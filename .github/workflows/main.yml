name: Backend Testing

on:
  push:
    branches:
      - main
      - Deployment
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 6s
          --health-timeout 5s
          --health-retries 5
          --name redis

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run CI
        run: npm ci

      - name: Run Build
        run: npm run build --if-present

      - name: Start worker and run tests
        run: |
          npm run worker &
          npm test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          ENVIRONMENT: development

  deploy-to-aci:
    runs-on: ubuntu-latest
    steps:
      # Install azure-cli
      - uses: elstudio/action-install-azure-cli@v1
      # Now run whatever steps require the `az` command line utility
      - uses: azure/webapps-deploy@v2
      # for example
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and tag Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: nightlight/nightlight-backend:${{ github.sha }}
      - name: Update Azure Container Instance
        run: |
          az container create --resource-group nightlight-app --name nightlight-backend --image nightlight/nightlight-backend:latest --restart-policy Never --dns-name-label nightlight
